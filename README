Журнал действий:
2019 08 13 
	Запустил гит и создал package.json командой npm init 
		Запустил npm install
			Выполнил команду npm install --save-dev webpack
			Выполнил команду npm install --save-dev webpack-cli (command line interface)
			Создал webpack.config.js где
				entry - указывает webpack’y, какой из JavaScript файлов является основным.
				output - указываем имя нашего пакета и путь к нему.
				После запуска webpack мы получим весь наш JavaScript в файле bundle.js. 
				Это единственный файл, который мы будем связывать в нашем HTML:
		Начинаю по очереди устанавливать:
			0.  'style-loader' -version 1.0.0, // creates style nodes from JS strings
          'css-loader' -version 3.2.0, // translates CSS into CommonJS
          'sass-loader' -version 7.2.0, // compiles Sass to CSS, using Node Sass by default
			1. npm install style-loader css-loader sass-loader --save-dev
			2. ссылка для дальнейшей работы https://github.com/webpack-contrib/sass-loader
			3. npm install pug pug-loader --save-dev
			Схемка: 

			в Паг чтобы файл принял другой файл надо написать extends ../../../name 
			где вместо точек путь к файлу без разрешения, комп сам поймет что это .pug

			В том файле который подключается в другой файл надо написать "block и имя"
			на первой строчке - все что будет под ним -- будет блоком.

			В главном файле чтобы загрузить код из второстепенного файла необходимо 
			написать "block имя" и ниже указать переменные если они есть больше на 18 
			минуте в видео https://www.youtube.com/watch?v=GaLS93JBeng

			Можно вставлять файлы pug в другие файлы pug с помощью "include ../../.. ets"


	2019 08 14
		Из рефакторинга: 
			"Это значит, что компонента футер должна быть кастомизируемая, и осуществляются
			подобного рода кастомизации через добавление модификаторов к блоку, а не путём 
			передачи отдельных классов со стилями."
			  Хорошо когда:
			 	    promo-page
     					+header({theme: 'transparent', font: 'light'})
			Не получится четко составить список всех возможных состояний компоненты, а при 
			подходе с модификаторами мы явно видим все возможные параметры на входе, и когда
			их число будет зашкаливать, можем пнуть дизайнера, что он слишком расфантазировался
			и пора бы переходить к единому стайлгайду;
		
		1. npm install --save-dev html-webpack-plugin
		2. npm install webpack-dev-server --save-dev это сервер для запуска лайв версии сервера,
				она кэшится в памяти и не производит никаких записей в папках проекта. Добавил его еще
				в webpack.config.js
		3. npm install --save-dev file-loader это утилита для загрузки файлов изображений в одну директорию
		4. добавил в конфиг вэбпака много всего